name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  RESUME_STYLESHEET: resume-stylesheet.css
  RESUME_MD: resume.md
  RESUME_SITE_MD: resume-site.md
  RESUME_HTML: index.html
  RESUME_PDF: Edward_Northcutt_Resume.pdf

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/northcutted/resume-ci:latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: "Create a folder called output"
        run: |
          mkdir output
          cp ${{ env.RESUME_STYLESHEET }} output/${{ env.RESUME_STYLESHEET }}
          cp ${{ env.RESUME_MD }} output/${{ github.actor }}-${{ env.RESUME_MD }}
      - name: Create resume-site.md
        run: |
          cp ${{ env.RESUME_MD }} ${{ env.RESUME_SITE_MD }}
          echo "\n\n### Like what you see? Download a PDF copy here by clicking the link below:\n[${{ env.RESUME_PDF }}](https://${{ github.event.repository.owner.login }}.github.io/${{ github.event.repository.name }}/${{ env.RESUME_PDF }})" >> ${{ env.RESUME_SITE_MD }}
          echo "\n\n _Want to see how this is built and hosted? Checkout the Github Repo [here](https://github.com/northcutted/resume)_" >> ${{ env.RESUME_SITE_MD }}
      - name: "Convert MD to HTML"
        run: |
          pandoc ${{ env.RESUME_SITE_MD }} -f markdown -t html -c ${{ env.RESUME_STYLESHEET }} -s -o output/${{ env.RESUME_HTML }}
          pandoc ${{ env.RESUME_MD }} -f markdown -t html -c ${{ env.RESUME_STYLESHEET }} -s -o output/to_pdf.html
      - name: "Convert HTML to PDF "
        run: "wkhtmltopdf --zoom 0.6 --enable-local-file-access output/to_pdf.html output/${{ env.RESUME_PDF }}"
      - name: Fix permissions
        run: |
          chmod -c -R +rX "output/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  release:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github
      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

