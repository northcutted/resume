name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: "Create a folder called output"
        run: |
          mkdir output
          cp resume-stylesheet.css output/resume-stylesheet.css
          cp resume.md output/${{ github.actor }}-resume.md
      - name: "Install pandoc and wkhtmltopdf"
        run: |
          wget https://github.com/jgm/pandoc/releases/download/3.0.1/pandoc-3.0.1-1-amd64.deb
          wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
          sudo apt install ./pandoc-3.0.1-1-amd64.deb
          sudo apt install ./wkhtmltox_0.12.6.1-2.jammy_amd64.deb
      - name: Create resume-site.md
        run: |
          cp resume.md resume-site.md
          echo -e "\n\n### Like what you see? Download a PDF copy here by clicking the link below:\n[Edward_Northcutt_Resume.pdf](https://northcutted.github.io/resume/Eddie_Northcutt_Resume.pdf)" >> resume-site.md
      - name: "Convert MD to HTML"
        run: |
          pandoc resume-site.md -f markdown -t html -c resume-stylesheet.css -s -o output/index.html
          pandoc resume.md -f markdown -t html -c resume-stylesheet.css -s -o output/to_pdf.html
      - name: "Convert HTML to PDF "
        run: "wkhtmltopdf wkhtmltopdf --zoom 0.7 --margin-bottom '3mm' --margin-top '3mm' --margin-left '3mm' --margin-right '3mm' --enable-local-file-access output/to_pdf.html output/Eddie_Northcutt_Resume.pdf"
      - name: Fix permissions
        run: |
          chmod -c -R +rX "output/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'output'
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
  release:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github
      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

